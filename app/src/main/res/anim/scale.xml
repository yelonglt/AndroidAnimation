<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
    android:fillAfter="true">
   <scale
          android:interpolator="@android:anim/accelerate_decelerate_interpolator"
          
          android:fromXScale="4.0"
          android:toXScale="1.0"
          
          android:fromYScale="4.0"
          android:toYScale="1.0"
          
          android:pivotX="50%"
          android:pivotY="50%"
          
          
          android:duration="5000" />
</set>

<!-- 尺寸伸缩动画效果 scale

       属性：interpolator 指定一个动画的插入器
        
        使用android.res.anim中的资源时候发现有三种动画插入器
        
        accelerate_decelerate_interpolator  加速-减速 动画插入器
        accelerate_interpolator        加速-动画插入器
        decelerate_interpolator        减速- 动画插入器
        
                    其他的属于特定的动画效果
        
        
        浮点型值：
         
        fromXScale 属性为动画起始时 X坐标上的伸缩尺寸    
        toXScale   属性为动画结束时 X坐标上的伸缩尺寸     
        
        fromYScale 属性为动画起始时Y坐标上的伸缩尺寸    
        toYScale   属性为动画结束时Y坐标上的伸缩尺寸    
        
        说明:
                     以上四种属性值    
        
        0.0表示收缩到没有 
        1.0表示正常无伸缩     
                     值小于1.0表示收缩  
                     值大于1.0表示放大
        
        
        pivotX     属性为动画相对于物件的X坐标的开始位置
        pivotY     属性为动画相对于物件的Y坐标的开始位置
        
        说明:
                     以上两个属性值 从0%-100%中取值
        50%为物件的X或Y方向坐标上的中点位置
        
        长整型值：
        duration  属性为动画持续时间
        说明:     
                     时间以毫秒为单位
        
        
        布尔型值:
        fillBefore是指动画结束时画面停留在第一帧，
        fillAfter是指动画结束是画面停留在最后一帧。
        
        最关键的问题是，这2个参数不能在</alpha>,</scale>,</translate>,</rotate>中设置，这是没有用的，必须
 	在动画xml文件的</set>节点中设置
 	
        fillAfter 属性 当设置为true ，该动画转化在动画结束后被应用
   
   
   startOffset，                动画多次执行的间隔时间，如果只执行一次，执行前会暂停这段时间，  
                    单位毫秒 duration，一次动画效果消耗的时间，单位毫秒，  
                    值越小动画速度越快 repeatCount，动画重复的计数，动画将会执行该值+1次   
                    repeatMode，动画重复的模式，reverse为反向，当第偶次执行时，动画方向会相反。  
                    restart为重新执行，方向不变     
-->

